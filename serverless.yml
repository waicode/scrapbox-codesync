service: scrapbox-codesync

frameworkVersion: "2"

plugins:
  - serverless-jest-plugin
  - serverless-dotenv-plugin

useDotenv: true

custom:
  defaultRegion: ap-northeast-1
  defaultStage: prod
  profile: slsfw-${self:provider.stage}
  environment:
    SLS_STAGE: ${self:provider.stage}
    USER_CSS_EYECATCH_URL: ${env:USER_CSS_EYECATCH_URL}
    USER_SCRIPT_EYECATCH_URL: ${env:USER_SCRIPT_EYECATCH_URL}
    USER_CSS_TAG: ${env:USER_CSS_TAG}
    USER_SCRIPT_TAG: ${env:USER_SCRIPT_TAG}
    CONCURRENT_EXEC_NUMBER: ${env:CONCURRENT_EXEC_NUMBER}
    SCRAPBOX_PROJECT_NAME: ${opt:scrapboxProjectName, env:SCRAPBOX_PROJECT_NAME}
    SCRAPBOX_CONNECT_SID: ${opt:scrapboxConnectSid, env:SCRAPBOX_CONNECT_SID}
    GITHUB_TARGET_BRUNCH: ${env:GITHUB_TARGET_BRUNCH}
    GITHUB_REPO_OWNER: ${opt:githubRepoOwner, env:GITHUB_REPO_OWNER}
    GITHUB_REPO_NAME: ${opt:githubRepoName, env:GITHUB_REPO_NAME}
    GITHUB_API_TOKEN: ${opt:githubApiToken, env:GITHUB_API_TOKEN}
    GITHUB_WEBHOOK_SECRET_TOKEN: ${opt:githubWebhookSecretToken, env:GITHUB_WEBHOOK_SECRET_TOKEN}

  request:
    template:
      application/json:
        method: $context.httpMethod,
        body: $util.escapeJavaScript($input.json('$')),
        headers:
          #foreach($param in $input.params().header.keySet())
          $param: $util.escapeJavaScript($input.params().header.get($param))
          #if($foreach.hasNext),#end
          #end

provider:
  name: aws
  runtime: nodejs12.x
  timeout: 900
  profile: ${opt:profile, self:custom.profile}
  region: ${opt:region, self:custom.defaultRegion}
  stage: ${opt:stage, self:custom.defaultStage}
  apiGateway:
    shouldStartNameWithService: true

functions:
  allSync:
    handler: app/handler.allSync
    layers:
      - { Ref: ChromeLambdaLayer }
    environment: ${self:custom.environment}
  receive:
    handler: app/handler.receive
    events:
      - http:
          path: scrapbox/code/receive
          method: post
    layers:
      - { Ref: ChromeLambdaLayer }
    environment: ${self:custom.environment}

package:
  exclude:
    - node_modules/serverless/**
    - node_modules/chrome-aws-lambda/**
    - chrome-aws-lambda/**
    - tests/**

layers:
  chrome:
    package:
      artifact: ./layers/chrome_aws_lambda.zip
